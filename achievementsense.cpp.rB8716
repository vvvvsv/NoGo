#include "achievementsense.h"
#include "ui_achievementsense.h"
#include <QMenuBar>
#include <QPainter>
#include <QTimer>
#include <QFile>
#include <QTextStream>
#include <QStandardItemModel>
#include <QTableWidget>

AchievementSense::AchievementSense(QWidget *parent) :
    QMainWindow(parent),
    ui(new Ui::AchievementSense)
{
    ui->setupUi(this);

    this->setFixedSize(1440,810);
    this->setWindowIcon(QPixmap(":/res/Icon.png"));
    this->setWindowTitle("成就");

    QMenuBar *bar=menuBar();
    setMenuBar(bar);

    QMenu *startMenu=bar->addMenu("开始");
    QAction *quitAction =startMenu->addAction("退出");
    QAction *backToMenuAction =startMenu->addAction("返回主菜单");

    connect(quitAction,&QAction::triggered,[=](){
        this->close();
    });

    connect(backToMenuAction,&QAction::triggered,[=](){
        QTimer::singleShot(300,this,[=](){
            emit this->backToMenu();
        });
    });

    //建立文件读写，把"Achievement.log"里面的东西输进来
    ui->tableWidget->setEditTriggers(QAbstractItemView::NoEditTriggers);
    ui->tableWidget->setSelectionMode(QAbstractItemView::NoSelection);
    ui->tableWidget->verticalHeader()->setVisible(false); //隐藏列表头
    ui->tableWidget->horizontalHeader()->setVisible(false); //隐藏行表头

    ui->tableWidget->resizeColumnsToContents();
    ui->tableWidget->resizeRowsToContents();

    ui->tableWidget->setFixedSize(960,540);
    ui->tableWidget->move(this->width()*0.5-ui->tableWidget->width()*0.5,
                          this->height()*0.5-ui->tableWidget->height()*0.5);

    ui->tableWidget->
            setStyleSheet("background-color:rgba(0,0,0,0)");
    ui->tableWidget->setShowGrid(0);
    ui->tableWidget->setColumnWidth(0,447);
    ui->tableWidget->setColumnWidth(1,30);
    ui->tableWidget->setColumnWidth(2,30);
    ui->tableWidget->setColumnWidth(3,447);
    for(int i=0;i<11;i++)
        ui->tableWidget->setRowHeight(i,48);

    QTableWidgetItem *item = new QTableWidgetItem("简单模式进行次数");
}

AchievementSense::~AchievementSense()
{
    delete ui;
}

void AchievementSense::paintEvent(QPaintEvent *event)
{
    QPainter painter(this);
    QPixmap pix;
    pix.load(":/res/Background0.png");
    painter.drawPixmap(0,0,pix);
}
